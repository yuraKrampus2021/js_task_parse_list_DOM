{"mappings":"ACEA,IA2BQ,EA3BF,EAAa,SAAS,gBAAgB,CAAC,iBACvC,EAAO,SAAS,aAAa,CAAC,MAiBpC,SAAS,EAAc,CAAK,EAC1B,OAAO,EAAM,OAAO,CAAC,QAAS,GAChC,EAIA,AArBA,SAAkB,CAAM,EACtB,IAAM,EAAM,MAAM,IAAI,CAAC,GAAQ,IAAI,CAAC,SAAC,CAAA,CAAG,CAAxC,EACE,MACE,CAAC,EAAc,EAAE,YAAY,CAAC,gBAC9B,CAAC,EAAc,EAAE,YAAY,CAAC,eAElC,EAEA,CAAA,EAAK,SAAS,CAAG,GAEZ,IAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAY,CAAA,CAAA,OAAA,QAAA,CAAA,GAAZ,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAL,CAAA,EAAA,CAAK,IAAM,EAAN,EAAA,KAAA,CACH,EAAK,WAAW,CAAC,E,C,C,M,E,CADd,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAGP,EAQS,GAGD,EAAgB,EAAE,CAExB,MAAM,IAAI,CAYM,GAZG,OAAO,CAAC,SAAC,CAA5B,EACE,EAAc,IAAI,CAAC,CACjB,KAAM,EAAS,WAAW,CAAC,IAAI,GAC/B,SAAU,EAAS,YAAY,CAAC,iBAChC,OAAQ,EAAS,YAAY,CAAC,eAC9B,IAAK,EAAS,YAAY,CAAC,WAC7B,EACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar empoloyees = document.querySelectorAll(\"[data-salary]\");\nvar list = document.querySelector(\"ul\");\nfunction sortList(colect) {\n    var out = Array.from(colect).sort(function(a, b) {\n        return +cleanCurrency(b.getAttribute(\"data-salary\")) - +cleanCurrency(a.getAttribute(\"data-salary\"));\n    });\n    list.innerHTML = \"\";\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        for(var _iterator = out[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var li = _step.value;\n            list.appendChild(li);\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n}\nfunction cleanCurrency(input) {\n    return input.replace(/[$,]/g, \"\");\n}\n// setTimeout(() => sortList(empoloyees), 1000);\nsortList(empoloyees);\nfunction addEmployeeInData(colect) {\n    var dataEmployees = [];\n    Array.from(colect).forEach(function(employee) {\n        dataEmployees.push({\n            name: employee.textContent.trim(),\n            position: employee.getAttribute(\"data-position\"),\n            salary: employee.getAttribute(\"data-salary\"),\n            age: employee.getAttribute(\"data-age\")\n        });\n    });\n    return dataEmployees;\n}\naddEmployeeInData(empoloyees);\n\n//# sourceMappingURL=index.b8b8dec3.js.map\n","'use strict';\n\nconst empoloyees = document.querySelectorAll('[data-salary]');\nconst list = document.querySelector('ul');\n\nfunction sortList(colect) {\n  const out = Array.from(colect).sort((a, b) => {\n    return (\n      +cleanCurrency(b.getAttribute('data-salary')) -\n      +cleanCurrency(a.getAttribute('data-salary'))\n    );\n  });\n\n  list.innerHTML = '';\n\n  for (const li of out) {\n    list.appendChild(li);\n  }\n}\n\nfunction cleanCurrency(input) {\n  return input.replace(/[$,]/g, '');\n}\n\n// setTimeout(() => sortList(empoloyees), 1000);\n\nsortList(empoloyees);\n\nfunction addEmployeeInData(colect) {\n  const dataEmployees = [];\n\n  Array.from(colect).forEach((employee) => {\n    dataEmployees.push({\n      name: employee.textContent.trim(),\n      position: employee.getAttribute('data-position'),\n      salary: employee.getAttribute('data-salary'),\n      age: employee.getAttribute('data-age'),\n    });\n  });\n\n  return dataEmployees;\n}\n\naddEmployeeInData(empoloyees);\n"],"names":["dataEmployees","empoloyees","document","querySelectorAll","list","querySelector","cleanCurrency","input","replace","sortList","colect","out","Array","from","sort","a","b","getAttribute","innerHTML","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","li","value","appendChild","err","return","forEach","employee","push","name","textContent","trim","position","salary","age"],"version":3,"file":"index.b8b8dec3.js.map"}